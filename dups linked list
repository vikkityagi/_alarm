##################
# Made by vikki  #
##################

import random

class Node:
    def __init__(self,value):
        self.value=value
        self.prev=None
        self.next=None

class LinkedList:
    def __init__(self):
        self.head=None
        self.next=None

    def __iter__(self):
        node=self.head
        while node is not None:
            yield node
            node=node.next
    
    def __str__(self):
        values=[str(i.value) for i in self]
        return '-->'.join(values) 

    def __len__(self):
        node=self.head
        i=0
        while node is not None:
            i+=1
            node=node.next
        return i

    def dups(self):
        dup_list=[]
        node=self.head
        while node is not None:
            if node.value not in dup_list:
                dup_list.append(node.value)
            node=node.next
        return dup_list

    
    def add(self,item):
        if self.head is None:
            node=Node(item)
            self.head=node
            self.tail=node
        else:
            self.tail.next=Node(item)
            self.tail=self.tail.next

    def generate(self,n,start,end):
        self.head=None
        self.tail=None
        for i in range(n):
            self.add(random.randint(start,end))
        return self

ll=LinkedList()
ll.generate(12,5,20)
print(ll)
print(ll.dups())
